"""
Имеется набор данных, состоящий из пар положительных целых чисел. Необходимо выбрать из каждой пары 
ровно одно число так, чтобы сумма всех выбранных чисел не делилась на 3 и при этом была максимально 
возможной. Гарантируется, что искомую сумму получить можно. Программа должна напечатать одно число — 
максимально возможную сумму, соответствующую условиям задачи.



"""

# f = open("nums-B.txt")  # для файла A замените название
# s = f.readlines()
# n = int(s[0])  # количество пар
# summa = 0
# d = 10**6
# for i in range(1, n + 1):
#     x, y = map(int, s[i].split())
#     summa += max(x, y)
#     if abs(x - y) % 3 != 0:
#         d = min(d, abs(x - y))

# if summa % 3 != 0:
#     print(summa)
# else:
#     print(summa - d)




"""
На вход программы поступает последовательность из N целых положительных чисел. 
Рассматриваются все пары различных элементов последовательности (элементы пары 
не обязаны стоять в последовательности рядом, порядок элементов в паре не важен). 
Необходимо определить количество пар, для которых произведение элементов делится на 26.

В первой строке входных данных задаётся количество чисел N (1 ≤ N ≤ 60000). 
В каждой из последующих N строк записано одно целое положительное число, не превышающее 10 000. 
В качестве результата программа должна напечатать одно число: количество пар, 
в которых произведение элементов кратно 26. 


"""



f = open("27989_A.txt")  # для файла A укажите его название
s = f.readlines()
n = int(s[0])
k = 0
k_0 = 0
k_26 = 0
k_2 = 0
k_13 = 0
for i in range(1, n + 1):
    s[i] = int(s[i])
    if s[i] % 26 == 0:
        k_26 += 1
    elif s[i] % 13 == 0:
        k_13 += 1
    elif s[i] % 2 == 0:
        k_2 += 1
    else:
        k_0 += 1
k = k_26 * k_0 + k_13 * k_2 + k_26 * k_13 + k_26 * k_2 + (k_26 * (k_26 - 1)) // 2
print(k)