# Задача 1
# Гласные и согласные
# Напиши программу, которая считает количество гласных
# и согласных букв в слове


# Задача 2
# Какого цвета клетка?
# Пользователь вводи координату клетки шахматной доски, например a5
# Необходимо определить, какого цвета эта клетка.


# Задача 3
# Напишите программу, которая будет запрашивать у пользователя год
# рождения и выводить ассоциированное с ним название животного по
# китайскому календарю.


# Задача 4
# Написать программу для подсчета
# среднего значения всех введенных пользователем чисел. Индикатором
# окончания ввода будет служить ввод пустой строки.


# Задача 5
# Удалить из списка чисел все элементы, которые меньше среднего арифметического


# Задача 6
# Игра FizzBuzz
# Выведите числа от 1 до 100, с условием, что если число делится
# без остатка на 3, нужно вывести вместо числа Fizz, если
# делится без остатка на 5, то нужно вывести Buzz,
# если и на 3 и на 5 - вывести FizzBuzz


# Задача 7
# Напишите программу, запрашивающую у пользователя два положительных
# целых числа и выводящую для них наибольший общий делитель
# (наибольшее число, на которое без остатка делятся оба числа)

# Задача 8
# Таблица умножения
# Создайте программу для отображения стандартной таблицы умножения от единицы до десяти.

# Задача 9
# Создайте симулятор подбрасывания монетки и выясните, сколько, в среднем, нужно попыток,
# чтобы три раза подряд выпал либо орел, либо решка.


# Задача 10
# Создать симулятор колоды карт
# Каждая карта соответствует одной из четырех мастей (пики, червы, бубны и трефы) и одному
# из 13 номиналов (от 2 до 10, валет (J), дама (Q), король (K) и туз (A)).
# Таким образом, каждая игральная карта может быть представлена при
# помощи двух символов. Первый из них указывает на номинал карты (от
# 2 до 9, T (десятка), J, Q, K или A), а второй – на масть (s = пики (spades),
# h = червы (hearts), d = бубны (diamonds) и c = трефы (clubs))
# Примеры карт: As, 9d, Qh

# 1) Создать функцию create_deck() 
# 2) создать функцию shuffle()



# Задача 11

# Содержит ли список подмножество элементов?

# Например, [1], [2], [3] и [4] являются подсписками списка [1, 2, 3, 4].
# Список [2, 3] также входит в состав [1, 2, 3, 4], но при этом список [2, 4]
# не является подсписком [1, 2, 3, 4], поскольку в исходном списке числа
# 2 и 4 не соседствуют друг с другом. Пустой список может быть рассмотрен
# как подсписок для любого списка. Таким образом, список [] является под-
# списком [1, 2, 3, 4]. Также список является подсписком самого себя, то
# есть [1, 2, 3, 4] – это подсписок для [1, 2, 3, 4].


# Необходимо написать функцию is_sublist, определяющую, является ли один список подсписком другого. На
# вход функции должны поступать два списка – larger и smaller. Функция
# должна возвращать значение True только в том случае, если список smaller
# является подсписком списка larger.